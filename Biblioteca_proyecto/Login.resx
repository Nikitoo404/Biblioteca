<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PcbCandados.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>